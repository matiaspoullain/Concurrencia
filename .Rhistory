}
}
lista.imagenes <- list.files("Graficos iniciales/Mapas animacion Pinamar", full.names = T)
library(gifski)
gifski(lista.imagenes, 'Graficos iniciales/Video completo Pinamar.gif', delay = 1/6, width = 750, height = 750)
archivos <- list.files("CSVs Concurrencias/restaurantes pinamar")
archivos
concurrencias <- data.frame()
for(i in archivos){
concurrencia <- read.csv(paste("CSVs Concurrencias/restaurantes pinamar/", i, sep = ""))
concurrencias <- rbind(concurrencias, concurrencia)
}
concurrencias
dim(concurrencias)
dim(unique(concurrencias))
length(archivos)
length(unique(interaction(concurrencias$latitud, concurrencias$longitud)))
str(concurrencias)
concurrencias$dia <- factor(concurrencias$dia, levels = unique(concurrencias$dia))
wirte.csv(concurrencias, "Concurrencias_Pinamar/Concurrencias.csv")
write.csv(concurrencias, "Concurrencias_Pinamar/Concurrencias.csv", row.names = FALSE)
archivos <- list.files("CSVs Concurrencias/restaurantes pinamar")
concurrencias <- data.frame()
for(i in archivos){
concurrencia <- read.csv(paste("CSVs Concurrencias/restaurantes pinamar/", i, sep = ""))
concurrencias <- rbind(concurrencias, concurrencia)
}
write.csv(concurrencias, "Concurrencias_Pinamar/Concurrencias.csv", row.names = FALSE, encoding = "UTF-8")
write.csv(concurrencias, "Concurrencias_Pinamar/Concurrencias.csv", row.names = FALSE, fileEncoding = "UTF-8")
write.csv(concurrencias, "Concurrencias_Pinamar/Concurrencias.csv", row.names = FALSE, fileEncoding = "UTF-8")
library(RSelenium)
driver <- try(rsDriver(browser = "firefox", geckover = "latest"), silent = T)
driver <- try(rsDriver(browser = "firefox", geckover = "latest"), silent = T)
remDr <<- driver[["client"]]
driver <- try(rsDriver(browser = "firefox", geckover = "latest"), silent = T)
driver <- rsDriver(browser = "firefox", geckover = "latest")
gc()
driver <- rsDriver(browser = "firefox", geckover = "latest")
remDrAll <- rsDriver(browser = "firefox")
remDr <- remDrAll$client
library(RSelenium)
remDrAll <- rsDriver(browser = "firefox")
remDr <- remDrAll$client
remDr$close()
rm(remDrAll )
gc()
remDrAll <- rsDriver(browser = "firefox")
rm(list = ls())
library(RSelenium)
remDrAll <- rsDriver(browser = "firefox")
remDr <- remDrAll$client
remDr$close()
rm(remDrAll )
gc()
remDrAll <- rsDriver(browser = "firefox")
remDr$closeServer()
remDr$closeServer
remDr$closeServer()
remDrAll <- rsDriver(browser = "firefox")
remDr$closeServer
remDr$closeServer()
60*5
install.packages("git2r")
gitcommit <- function(msg = "commit from Rstudio", dir = getwd()){
cmd = sprintf("git commit -m\"%s\"",msg)
system(cmd)
}
#Descarga concurrencias parques CABA:
library(git2r)
gitadd()
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
gitadd()
gitstatus()
install.packages("drat")
library(drat)
gitstatus()
#Descarga concurrencias parques CABA:
library(git2r)
gitstatus()
git2r::gitstatus()
git2r::status()
git2r::add(repo = ".", path = NULL, force = FALSE)
git2r::add(repo = ".", path = ".", force = FALSE)
getwd()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "prueba")
git2r::push()
git2r::push(credentials = "git@github.com:matiaspoullain/Concurrencia.git")
git2r::push(credentials = "albertoelloco1")
shell("git push")
git("git commit prueba 2")
shell("git commit prueba 2")
shell("git commit prueba2")
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "subida de datos de parques")
git2r::commit(repo = ".", message = "subida de datos de parques")
git2r::commit(repo = ".", message = "prueba", all = TRUE)
shell("git push")
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "prueba2", all = TRUE)
shell("git push")
bares <- read.csv("Nombres bares CABA.csv", encoding = "UTF-8")
bares <- read.csv("Concurrencias_CABA/Nombres bares CABA.csv", encoding = "UTF-8")
bares
bares <- read.csv("Concurrencias_CABA/Nombres bares CABA.csv")
bares
bares <- paste(bares$caba, ", Ciudad de Buenos Aires", sep = "")
bares
salieron.mal <- bares[25:50]
df.salieron.mal <- data.frame(num, salieron.mal)
num <- 1:length(salieron.mal)
df.salieron.mal <- data.frame(num, salieron.mal)
write.csv(df.salieron.mal, "bares salieron mal.csv")
#Descarga concurrencias parques CABA:
library(git2r)
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "cambios chicos", all = TRUE)
shell("git push")
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "cambios chicos", all = TRUE)
shell("git push")
source('C:/Users/Rzne_2/Desktop/Proyectos/Concurrencia github/Concurrencia/Concurrencias_CABA/Descarga concurrencias parques.R', echo=TRUE)
source('C:/Users/Rzne_2/Desktop/Proyectos/Concurrencia github/Concurrencia/Concurrencias_CABA/Descarga concurrencias parques.R', echo=TRUE)
#Sources
#Parques
source("Descarga concurrencias parques.R")
#Sources
#Parques
source("Concurrencias_CABA/Descarga concurrencias parques.R")
#Descarga concurrencias parques CABA:
library(git2r)
salieron.mal <- read.csv("Concurrencias_CABA/parques salieron mal.csv")
salieron.mal <- salieron.mal$salieron.mal
salieron.mal
library(sgat)
initialization_sgat()
sgat(salieron.mal[1])
#Descarga concurrencias parques CABA:
library(git2r)
rm(list=ls())
#Descarga concurrencias parques CABA:
library(git2r)
salieron.mal <- read.csv("Concurrencias_CABA/parques salieron mal.csv")
salieron.mal <- salieron.mal$salieron.mal
library(sgat)
initialization_sgat()
sgat(salieron.mal[2])
debug()
debug(sgat(salieron.mal[2]))
traceback
traceback()
7
View(sgat_day)
lugar.a.buscar <- salieron.mal[2]
dia.semana <- "miercoles"
tiempo.espera = 10
remDr$open(silent = TRUE)
remDr$navigate("https://www.google.com.ar")
webElem <- remDr$findElement(using = "name", value = "q")
webElem$sendKeysToElement(list(paste(lugar.a.buscar, ", horarios",
dia.semana), "<U+E007>"))
Sys.sleep(2)
apertura <- NA_character_
concurrencia <- NA_character_
x <- 0
while (x <= tiempo.espera & replace(apertura[1], is.na(apertura[1]),
"0") != "Cerrado" & is.na(concurrencia[1])) {
source <- remDr$getPageSource()[[1]]
apertura <- qdapRegex::ex_between(source, "\"TLou0b JjSWRd\">",
"<")[[1]]
concurrencia <- qdapRegex::ex_between(source, "class=\"cwiwob",
"px")[[1]]
x <- x + 1
}
!("Cerrado" %in% replace(apertura[1], is.na(apertura[1]
!("Cerrado" %in% replace(apertura[1], is.na(apertura[1]),
"0"))
!("Cerrado" %in% replace(apertura[1], is.na(apertura[1]),
"0"))
!is.na(concurrencia[1])
concurrencia[1]
concurrencia
apertura <- NA_character_
concurrencia <- NA_character_
x <- 0
while (x <= tiempo.espera & replace(apertura[1], is.na(apertura[1]),
"0") != "Cerrado" & is.na(concurrencia[1])) {
source <- remDr$getPageSource()[[1]]
apertura <- qdapRegex::ex_between(source, "\"TLou0b JjSWRd\">",
"<")[[1]]
concurrencia <- qdapRegex::ex_between(source, "class=\"cwiwob",
"px")[[1]]
x <- x + 1
}
apertura
concurrencia
while (x <= tiempo.espera & replace(apertura[1], is.na(apertura[1]),
"0") != "Cerrado" & is.na(concurrencia[1])) {
source <- remDr$getPageSource()[[1]]
apertura <- qdapRegex::ex_between(source, "\"TLou0b JjSWRd\">",
"<")[[1]]
concurrencia <- qdapRegex::ex_between(source, "class=\"cwiwob",
"px")[[1]]
x <- x + 1
}
apertura
concurrencia
remDr$open(silent = TRUE)
remDr$navigate("https://www.google.com.ar")
webElem <- remDr$findElement(using = "name", value = "q")
webElem$sendKeysToElement(list(paste(lugar.a.buscar, ", horarios",
dia.semana), "<U+E007>"))
Sys.sleep(2)
apertura <- NA_character_
concurrencia <- NA_character_
x <- 0
apertura <- NA_character_
concurrencia <- NA_character_
x <- 0
while (x <= tiempo.espera & replace(apertura[1], is.na(apertura[1]),
"0") != "Cerrado" & is.na(concurrencia[1])) {
source <- remDr$getPageSource()[[1]]
apertura <- qdapRegex::ex_between(source, "\"TLou0b JjSWRd\">",
"<")[[1]]
concurrencia <- qdapRegex::ex_between(source, "class=\"cwiwob",
"px")[[1]]
x <- x + 1
}
concurrencia
!("Cerrado" %in% replace(apertura[1], is.na(apertura[1]),
"0"))
!is.na(concurrencia[1])
coordenadas <- qdapRegex::ex_between(source, "data-url=\"/maps/place/",
",15z")
remDr$close()
coordenadas <- sub(".*@", "", coordenadas)
latitud <- sub(",.*", "", coordenadas)
longitud <- sub(".*,", "", coordenadas)
concurrencia <- as.numeric(sub(".*:", "", concurrencia))
hora <- qdapRegex::ex_between(source, "data-hour=",
" jsaction")[[1]]
hora <- as.numeric(gsub("[^0-9.-]", "", hora))
length(concurrencia) != length(hora)
loc.concurrencia <- data.table::data.table(concurrencia,
data.frame(stringr::str_locate_all(source,
"class=\"cwiwob")))
loc.hora <- data.table::data.table(hora, data.frame(stringr::str_locate_all(source,
"data-hour=")))
data.table::setkey(loc.concurrencia, "start")
data.table::setkey(loc.hora, "start")
df <- as.data.frame(loc.concurrencia[loc.hora,
roll = "nearest"])
df <- df[, c(4, 1)]
df <- as.data.frame(loc.concurrencia[loc.hora,
roll = "nearest"])
df <- as.data.frame(loc.concurrencia[loc.hora,
roll = "nearest"])
for(i in 1:50) {df <- as.data.frame(loc.concurrencia[loc.hora,
roll = "nearest"])}
sgat_day(salieron.mal[2], "miercoles")
sgat_day_prueba <- function (lugar.a.buscar, dia.semana, tiempo.espera = 10)
{
if (missing(lugar.a.buscar) | missing(dia.semana)) {
stop("\"lugar.a.buscar\" and \"dia.semana\" must be specified")
}
remDr$open(silent = TRUE)
remDr$navigate("https://www.google.com.ar")
webElem <- remDr$findElement(using = "name", value = "q")
webElem$sendKeysToElement(list(paste(lugar.a.buscar, ", horarios",
dia.semana), "<U+E007>"))
Sys.sleep(2)
apertura <- NA_character_
concurrencia <- NA_character_
x <- 0
while (x <= tiempo.espera & replace(apertura[1], is.na(apertura[1]),
"0") != "Cerrado" & is.na(concurrencia[1])) {
source <- remDr$getPageSource()[[1]]
apertura <- qdapRegex::ex_between(source, "\"TLou0b JjSWRd\">",
"<")[[1]]
concurrencia <- qdapRegex::ex_between(source, "class=\"cwiwob",
"px")[[1]]
x <- x + 1
}
if (!("Cerrado" %in% replace(apertura[1], is.na(apertura[1]),
"0"))) {
if (!is.na(concurrencia[1])) {
coordenadas <- qdapRegex::ex_between(source, "data-url=\"/maps/place/",
",15z")
remDr$close()
coordenadas <- sub(".*@", "", coordenadas)
latitud <- sub(",.*", "", coordenadas)
longitud <- sub(".*,", "", coordenadas)
concurrencia <- as.numeric(sub(".*:", "", concurrencia))
hora <- qdapRegex::ex_between(source, "data-hour=",
" jsaction")[[1]]
hora <- as.numeric(gsub("[^0-9.-]", "", hora))
if (length(concurrencia) != length(hora)) {
loc.concurrencia <- data.table::data.table(concurrencia,
data.frame(stringr::str_locate_all(source,
"class=\"cwiwob")))
loc.hora <- data.table::data.table(hora, data.frame(stringr::str_locate_all(source,
"data-hour=")))
data.table::setkey(loc.concurrencia, "start")
data.table::setkey(loc.hora, "start")
df <- as.data.frame(loc.concurrencia[loc.hora,
roll = "nearest"])
df <- df[, c(4, 1)]
}
else {
df <- data.frame(hora, concurrencia)
}
df$lugar <- lugar.a.buscar
df$dia <- dplyr::case_when(hora > 23 & dia.semana ==
"lunes" ~ "martes", hora > 23 & dia.semana ==
"martes" ~ "miercoles", hora > 23 & dia.semana ==
"miercoles" ~ "jueves", hora > 23 & dia.semana ==
"jueves" ~ "viernes", hora > 23 & dia.semana ==
"viernes" ~ "sabado", hora > 23 & dia.semana ==
"sabado" ~ "domingo", hora > 23 & dia.semana ==
"domingo" ~ "lunes", TRUE ~ dia.semana)
df$hora <- dplyr::if_else(df$hora > 23, df$hora -
24, df$hora)
df$fecha.de.busqueda <- Sys.Date()
df$latitud <- as.numeric(latitud)
df$longitud <- as.numeric(longitud)
df <- df[, c(3, 4, 1, 2, 6, 7, 5)]
df
}
else {
remDr$close()
return("Sin datos de concurrencia")
}
}
else {
remDr$close()
}
}
sgat_day_prueba <- function (lugar.a.buscar, dia.semana, tiempo.espera = 10)
{
if (missing(lugar.a.buscar) | missing(dia.semana)) {
stop("\"lugar.a.buscar\" and \"dia.semana\" must be specified")
}
remDr$open(silent = TRUE)
remDr$navigate("https://www.google.com.ar")
webElem <- remDr$findElement(using = "name", value = "q")
webElem$sendKeysToElement(list(paste(lugar.a.buscar, ", horarios",
dia.semana), "<U+E007>"))
Sys.sleep(2)
apertura <- NA_character_
concurrencia <- NA_character_
x <- 0
while (x <= tiempo.espera & replace(apertura[1], is.na(apertura[1]),
"0") != "Cerrado" & is.na(concurrencia[1])) {
source <- remDr$getPageSource()[[1]]
apertura <- qdapRegex::ex_between(source, "\"TLou0b JjSWRd\">",
"<")[[1]]
concurrencia <- qdapRegex::ex_between(source, "class=\"cwiwob",
"px")[[1]]
x <- x + 1
}
if (!("Cerrado" %in% replace(apertura[1], is.na(apertura[1]),
"0"))) {
if (!is.na(concurrencia[1])) {
coordenadas <- qdapRegex::ex_between(source, "data-url=\"/maps/place/",
",15z")
remDr$close()
coordenadas <- sub(".*@", "", coordenadas)
latitud <- sub(",.*", "", coordenadas)
longitud <- sub(".*,", "", coordenadas)
concurrencia <- as.numeric(sub(".*:", "", concurrencia))
hora <- qdapRegex::ex_between(source, "data-hour=",
" jsaction")[[1]]
hora <- as.numeric(gsub("[^0-9.-]", "", hora))
if (length(concurrencia) != length(hora)) {
loc.concurrencia <- data.table::data.table(concurrencia,
data.frame(stringr::str_locate_all(source,
"class=\"cwiwob")))
loc.hora <- data.table::data.table(hora, data.frame(stringr::str_locate_all(source,
"data-hour=")))
data.table::setkey(loc.concurrencia, "start")
data.table::setkey(loc.hora, "start")
df <- 1
class(df) <- "try-error"
intentos <- 20
while(class(df) == "tyr-error" | intentos <= 20){
df <- try(as.data.frame(loc.concurrencia[loc.hora,
roll = "nearest"]), silent = TRUE)
intentos <- intentos + 1
}
df <- df[, c(4, 1)]
}
else {
df <- data.frame(hora, concurrencia)
}
df$lugar <- lugar.a.buscar
df$dia <- dplyr::case_when(hora > 23 & dia.semana ==
"lunes" ~ "martes", hora > 23 & dia.semana ==
"martes" ~ "miercoles", hora > 23 & dia.semana ==
"miercoles" ~ "jueves", hora > 23 & dia.semana ==
"jueves" ~ "viernes", hora > 23 & dia.semana ==
"viernes" ~ "sabado", hora > 23 & dia.semana ==
"sabado" ~ "domingo", hora > 23 & dia.semana ==
"domingo" ~ "lunes", TRUE ~ dia.semana)
df$hora <- dplyr::if_else(df$hora > 23, df$hora -
24, df$hora)
df$fecha.de.busqueda <- Sys.Date()
df$latitud <- as.numeric(latitud)
df$longitud <- as.numeric(longitud)
df <- df[, c(3, 4, 1, 2, 6, 7, 5)]
df
}
else {
remDr$close()
return("Sin datos de concurrencia")
}
}
else {
remDr$close()
}
}
sgat_day_prueba(salieron.mal[2], "miercoles")
sgat_day_prueba(salieron.mal[2], "miercoles")
sgat_day_prueba <- function (lugar.a.buscar, dia.semana, tiempo.espera = 10)
{
if (missing(lugar.a.buscar) | missing(dia.semana)) {
stop("\"lugar.a.buscar\" and \"dia.semana\" must be specified")
}
remDr$open(silent = TRUE)
remDr$navigate("https://www.google.com.ar")
webElem <- remDr$findElement(using = "name", value = "q")
webElem$sendKeysToElement(list(paste(lugar.a.buscar, " ,horarios", dia.semana), "\uE007"))
Sys.sleep(2)
apertura <- NA_character_
concurrencia <- NA_character_
x <- 0
while (x <= tiempo.espera & replace(apertura[1], is.na(apertura[1]),
"0") != "Cerrado" & is.na(concurrencia[1])) {
source <- remDr$getPageSource()[[1]]
apertura <- qdapRegex::ex_between(source, "\"TLou0b JjSWRd\">",
"<")[[1]]
concurrencia <- qdapRegex::ex_between(source, "class=\"cwiwob",
"px")[[1]]
x <- x + 1
}
if (!("Cerrado" %in% replace(apertura[1], is.na(apertura[1]),
"0"))) {
if (!is.na(concurrencia[1])) {
coordenadas <- qdapRegex::ex_between(source, "data-url=\"/maps/place/",
",15z")
remDr$close()
coordenadas <- sub(".*@", "", coordenadas)
latitud <- sub(",.*", "", coordenadas)
longitud <- sub(".*,", "", coordenadas)
concurrencia <- as.numeric(sub(".*:", "", concurrencia))
hora <- qdapRegex::ex_between(source, "data-hour=",
" jsaction")[[1]]
hora <- as.numeric(gsub("[^0-9.-]", "", hora))
if (length(concurrencia) != length(hora)) {
loc.concurrencia <- data.table::data.table(concurrencia,
data.frame(stringr::str_locate_all(source,
"class=\"cwiwob")))
loc.hora <- data.table::data.table(hora, data.frame(stringr::str_locate_all(source,
"data-hour=")))
data.table::setkey(loc.concurrencia, "start")
data.table::setkey(loc.hora, "start")
df <- 1
class(df) <- "try-error"
intentos <- 20
while(class(df) == "tyr-error" | intentos <= 20){
df <- try(as.data.frame(loc.concurrencia[loc.hora,
roll = "nearest"]), silent = TRUE)
intentos <- intentos + 1
}
df <- df[, c(4, 1)]
}
else {
df <- data.frame(hora, concurrencia)
}
df$lugar <- lugar.a.buscar
df$dia <- dplyr::case_when(hora > 23 & dia.semana ==
"lunes" ~ "martes", hora > 23 & dia.semana ==
"martes" ~ "miercoles", hora > 23 & dia.semana ==
"miercoles" ~ "jueves", hora > 23 & dia.semana ==
"jueves" ~ "viernes", hora > 23 & dia.semana ==
"viernes" ~ "sabado", hora > 23 & dia.semana ==
"sabado" ~ "domingo", hora > 23 & dia.semana ==
"domingo" ~ "lunes", TRUE ~ dia.semana)
df$hora <- dplyr::if_else(df$hora > 23, df$hora -
24, df$hora)
df$fecha.de.busqueda <- Sys.Date()
df$latitud <- as.numeric(latitud)
df$longitud <- as.numeric(longitud)
df <- df[, c(3, 4, 1, 2, 6, 7, 5)]
df
}
else {
remDr$close()
return("Sin datos de concurrencia")
}
}
else {
remDr$close()
}
}
sgat_day_prueba(salieron.mal[2], "miercoles")
sgat_day(salieron.mal[2], "miercoles")
