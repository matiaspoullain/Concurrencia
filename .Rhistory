df <- df[, c(3, 4, 1, 2, 6, 7, 5)]
df
}
else {
remDr$close()
return("Sin datos de concurrencia")
}
}
else {
remDr$close()
}
}
sgat_day_prueba(salieron.mal[2], "miercoles")
sgat_day_prueba(salieron.mal[2], "miercoles")
sgat_day_prueba <- function (lugar.a.buscar, dia.semana, tiempo.espera = 10)
{
if (missing(lugar.a.buscar) | missing(dia.semana)) {
stop("\"lugar.a.buscar\" and \"dia.semana\" must be specified")
}
remDr$open(silent = TRUE)
remDr$navigate("https://www.google.com.ar")
webElem <- remDr$findElement(using = "name", value = "q")
webElem$sendKeysToElement(list(paste(lugar.a.buscar, " ,horarios", dia.semana), "\uE007"))
Sys.sleep(2)
apertura <- NA_character_
concurrencia <- NA_character_
x <- 0
while (x <= tiempo.espera & replace(apertura[1], is.na(apertura[1]),
"0") != "Cerrado" & is.na(concurrencia[1])) {
source <- remDr$getPageSource()[[1]]
apertura <- qdapRegex::ex_between(source, "\"TLou0b JjSWRd\">",
"<")[[1]]
concurrencia <- qdapRegex::ex_between(source, "class=\"cwiwob",
"px")[[1]]
x <- x + 1
}
if (!("Cerrado" %in% replace(apertura[1], is.na(apertura[1]),
"0"))) {
if (!is.na(concurrencia[1])) {
coordenadas <- qdapRegex::ex_between(source, "data-url=\"/maps/place/",
",15z")
remDr$close()
coordenadas <- sub(".*@", "", coordenadas)
latitud <- sub(",.*", "", coordenadas)
longitud <- sub(".*,", "", coordenadas)
concurrencia <- as.numeric(sub(".*:", "", concurrencia))
hora <- qdapRegex::ex_between(source, "data-hour=",
" jsaction")[[1]]
hora <- as.numeric(gsub("[^0-9.-]", "", hora))
if (length(concurrencia) != length(hora)) {
loc.concurrencia <- data.table::data.table(concurrencia,
data.frame(stringr::str_locate_all(source,
"class=\"cwiwob")))
loc.hora <- data.table::data.table(hora, data.frame(stringr::str_locate_all(source,
"data-hour=")))
data.table::setkey(loc.concurrencia, "start")
data.table::setkey(loc.hora, "start")
df <- 1
class(df) <- "try-error"
intentos <- 20
while(class(df) == "tyr-error" | intentos <= 20){
df <- try(as.data.frame(loc.concurrencia[loc.hora,
roll = "nearest"]), silent = TRUE)
intentos <- intentos + 1
}
df <- df[, c(4, 1)]
}
else {
df <- data.frame(hora, concurrencia)
}
df$lugar <- lugar.a.buscar
df$dia <- dplyr::case_when(hora > 23 & dia.semana ==
"lunes" ~ "martes", hora > 23 & dia.semana ==
"martes" ~ "miercoles", hora > 23 & dia.semana ==
"miercoles" ~ "jueves", hora > 23 & dia.semana ==
"jueves" ~ "viernes", hora > 23 & dia.semana ==
"viernes" ~ "sabado", hora > 23 & dia.semana ==
"sabado" ~ "domingo", hora > 23 & dia.semana ==
"domingo" ~ "lunes", TRUE ~ dia.semana)
df$hora <- dplyr::if_else(df$hora > 23, df$hora -
24, df$hora)
df$fecha.de.busqueda <- Sys.Date()
df$latitud <- as.numeric(latitud)
df$longitud <- as.numeric(longitud)
df <- df[, c(3, 4, 1, 2, 6, 7, 5)]
df
}
else {
remDr$close()
return("Sin datos de concurrencia")
}
}
else {
remDr$close()
}
}
sgat_day_prueba(salieron.mal[2], "miercoles")
sgat_day(salieron.mal[2], "miercoles")
=======
salieron.mal <- read.csv("Concurrencias CABA/parques salieron mal.csv")
salieron.mal <- read.csv("Concurrencias_CABA/parques salieron mal.csv")
salieron.mal
salieron.mal <- salieron.mal$salieron.mal
salieron.mal
#Descarga concurrencias parques CABA:
library(git2r)
library(sgat)
initialization_sgat()
parques <- salieron.mal
va.por <- parques[1]
salieron.mal <- c()
repeticiones <- 0
for(resta in parques[which(parques == va.por):length(parques)]){
print(paste("Va por ", which(parques == va.por), " de ", length(parques), ": ", 100* which(parques == va.por)/length(parques), " %", sep = "" ))
concurrencia.parques.caba <- 1
class(concurrencia.parques.caba) <- "try-error"
intento <- 1
while(class(concurrencia.parques.caba) == "try-error" & intento <= 20){
concurrencia.parques.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/Parques CABA", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.parques.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
va.por <- resta
}
num <- 1:length(salieron.mal)
df.salieron.mal <- data.frame(num, salieron.mal)
write.csv(df.salieron.mal, "Concurrencias_CABA/parques salieron mal.csv")
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "cambios chicos", all = TRUE)
shell("git push")
salieron.mal
parques <- salieron.mal
va.por <- parques[1]
salieron.mal <- c()
repeticiones <- 0
for(resta in parques[which(parques == va.por):length(parques)]){
print(paste("Va por ", which(parques == va.por), " de ", length(parques), ": ", 100* which(parques == va.por)/length(parques), " %", sep = "" ))
concurrencia.parques.caba <- 1
class(concurrencia.parques.caba) <- "try-error"
intento <- 1
while(class(concurrencia.parques.caba) == "try-error" & intento <= 20){
concurrencia.parques.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/Parques CABA", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.parques.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
va.por <- resta
}
num <- 1:length(salieron.mal)
df.salieron.mal <- data.frame(num, salieron.mal)
write.csv(df.salieron.mal, "Concurrencias_CABA/parques salieron mal.csv")
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "datos parques", all = TRUE)
shell("git push")
salieron.mal
parques <- salieron.mal
va.por <- parques[1]
salieron.mal <- c()
repeticiones <- 0
for(resta in parques[which(parques == va.por):length(parques)]){
print(paste("Va por ", which(parques == va.por), " de ", length(parques), ": ", 100* which(parques == va.por)/length(parques), " %", sep = "" ))
concurrencia.parques.caba <- 1
class(concurrencia.parques.caba) <- "try-error"
intento <- 1
while(class(concurrencia.parques.caba) == "try-error" & intento <= 50){
concurrencia.parques.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/Parques CABA", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.parques.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
va.por <- resta
}
num <- 1:length(salieron.mal)
df.salieron.mal <- data.frame(num, salieron.mal)
write.csv(df.salieron.mal, "Concurrencias_CABA/parques salieron mal.csv")
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "datos parques", all = TRUE)
shell("git push")
salieron.mal
parques <- salieron.mal
va.por <- parques[1]
salieron.mal <- c()
repeticiones <- 0
for(resta in parques[which(parques == va.por):length(parques)]){
print(paste("Va por ", which(parques == va.por), " de ", length(parques), ": ", 100* which(parques == va.por)/length(parques), " %", sep = "" ))
concurrencia.parques.caba <- 1
class(concurrencia.parques.caba) <- "try-error"
intento <- 1
while(class(concurrencia.parques.caba) == "try-error" & intento <= 50){
concurrencia.parques.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/Parques CABA", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.parques.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
va.por <- resta
}
num <- 1:length(salieron.mal)
df.salieron.mal <- data.frame(num, salieron.mal)
write.csv(df.salieron.mal, "Concurrencias_CABA/parques salieron mal.csv")
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "datos parques", all = TRUE)
shell("git push")
salieron.mal
>>>>>>> edd8a0531afac79ef711a16446cf485add49cbd3
#Descarga concurrencias parques CABA:
library(git2r)
salieron.mal <- read.csv("Concurrencias_CABA/parques salieron mal.csv")
salieron.mal <- salieron.mal$salieron.mal
salieron.mal
salieron.mal <- read.csv("Concurrencias_CABA/parques salieron mal.csv")
salieron.mal
salieron.mal <- read.csv("Concurrencias_CABA/parques salieron mal.csv")
salieron.mal
salieron.mal <- salieron.mal$salieron.mal
salieron.mal
library(sgat)
initialization_sgat()
View(sgat_day)
rm(list = ls())
#Descarga concurrencias parques CABA:
library(git2r)
salieron.mal <- read.csv("Concurrencias_CABA/parques salieron mal.csv")
salieron.mal <- salieron.mal$salieron.mal
library(sgat)
View(sgat_day)
initialization_sgat()
parques <- salieron.mal
va.por <- parques[1]
salieron.mal <- c()
repeticiones <- 0
for(resta in parques[which(parques == va.por):length(parques)]){
print(paste("Va por ", which(parques == va.por), " de ", length(parques), ": ", 100* which(parques == va.por)/length(parques), " %", sep = "" ))
concurrencia.parques.caba <- 1
class(concurrencia.parques.caba) <- "try-error"
intento <- 1
while(class(concurrencia.parques.caba) == "try-error" & intento <= 50){
concurrencia.parques.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/Parques CABA", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.parques.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
va.por <- resta
}
num <- 1:length(salieron.mal)
df.salieron.mal <- data.frame(num, salieron.mal)
write.csv(df.salieron.mal, "Concurrencias_CABA/parques salieron mal.csv")
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "datos parques", all = TRUE)
shell("git push")
salieron.mal
parques <- salieron.mal
va.por <- parques[1]
salieron.mal <- c()
repeticiones <- 0
for(resta in parques[which(parques == va.por):length(parques)]){
print(paste("Va por ", which(parques == va.por), " de ", length(parques), ": ", 100* which(parques == va.por)/length(parques), " %", sep = "" ))
concurrencia.parques.caba <- 1
class(concurrencia.parques.caba) <- "try-error"
intento <- 1
while(class(concurrencia.parques.caba) == "try-error" & intento <= 50){
concurrencia.parques.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/Parques CABA", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.parques.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
va.por <- resta
}
num <- 1:length(salieron.mal)
df.salieron.mal <- data.frame(num, salieron.mal)
write.csv(df.salieron.mal, "Concurrencias_CABA/parques salieron mal.csv")
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "datos parques", all = TRUE)
shell("git push")
salieron.mal
parques <- salieron.mal
va.por <- parques[1]
salieron.mal <- c()
repeticiones <- 0
for(resta in parques[which(parques == va.por):length(parques)]){
print(paste("Va por ", which(parques == va.por), " de ", length(parques), ": ", 100* which(parques == va.por)/length(parques), " %", sep = "" ))
concurrencia.parques.caba <- 1
class(concurrencia.parques.caba) <- "try-error"
intento <- 1
while(class(concurrencia.parques.caba) == "try-error" & intento <= 50){
concurrencia.parques.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/Parques CABA", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.parques.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
va.por <- resta
}
num <- 1:length(salieron.mal)
df.salieron.mal <- data.frame(num, salieron.mal)
write.csv(df.salieron.mal, "Concurrencias_CABA/parques salieron mal.csv")
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "datos parques", all = TRUE)
shell("git push")
salieron.mal
rm(list=ls())
#Descarga concurrencias parques CABA:
library(git2r)
parques <- read.csv("Concurrencias_CABA/Nombres parques CABA.csv", encoding = "UTF-8")
parques <- paste(parques$Nombre.de.la.plaza.o.plazoleta, ", Ciudad de Buenos Aires", sep = "")
library(sgat)
initialization_sgat()
parques <- salieron.mal
va.por <- parques[1]
salieron.mal <- c()
repeticiones <- 0
for(resta in parques){
print(paste("Va por ", which(parques == resta), " de ", length(parques), ": ", 100* which(parques == resta)/length(parques), " %", sep = "" ))
concurrencia.parques.caba <- 1
class(concurrencia.parques.caba) <- "try-error"
intento <- 1
while(class(concurrencia.parques.caba) == "try-error" & intento <= 50){
concurrencia.parques.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/Parques CABA nuevo sgat", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.parques.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
va.por <- resta
}
num <- 1:length(salieron.mal)
df.salieron.mal <- data.frame(num, salieron.mal)
write.csv(df.salieron.mal, "Concurrencias_CABA/parques salieron mal.csv")
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "datos parques", all = TRUE)
shell("git push")
salieron.mal
parques <- salieron.mal
va.por <- parques[1]
salieron.mal <- c()
repeticiones <- 0
for(resta in parques){
print(paste("Va por ", which(parques == resta), " de ", length(parques), ": ", 100* which(parques == resta)/length(parques), " %", sep = "" ))
concurrencia.parques.caba <- 1
class(concurrencia.parques.caba) <- "try-error"
intento <- 1
while(class(concurrencia.parques.caba) == "try-error" & intento <= 50){
concurrencia.parques.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/Parques CABA nuevo sgat", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.parques.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
va.por <- resta
}
#Descarga concurrencias bares CABA:
library(git2r)
bares <- read.csv("Concurrencias_CABA/Nombres bares CABA.csv")
bares <- paste(bares$caba, ", Ciudad de Buenos Aires", sep = "")
#salieron.mal <- read.csv("Concurrencias_CABA/bares salieron mal.csv")
#salieron.mal <- salieron.mal$salieron.mal
library(sgat)
initialization_sgat()
#bares <- salieron.mal
ya.hizo <- c()
salieron.mal <- c()
repeticiones <- 0
for(resta in bares){
print(paste("Va por ", which(bares == resta), " de ", length(bares), ": ", 100* which(bares == resta)/length(bares), " %", sep = "" ))
ya.hizo <- c(ya.hizo, resta)
write.csv(ya.hizo, "Concurrencias_CABA/Bares que ya inicio.csv")
concurrencia.bares.caba <- 1
class(concurrencia.bares.caba) <- "try-error"
intento <- 1
while(class(concurrencia.bares.caba) == "try-error" & intento <= 5){
concurrencia.bares.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/bares CABA nuevo sgat", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.bares.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
write.csv(df.salieron.mal, "Concurrencias_CABA/bares salieron mal.csv")
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
}
rm(list=ls())
library(git2r)
bares <- read.csv("Concurrencias_CABA/Nombres bares CABA.csv")
bares <- paste(bares$caba, ", Ciudad de Buenos Aires", sep = "")
#salieron.mal <- read.csv("Concurrencias_CABA/bares salieron mal.csv")
#salieron.mal <- salieron.mal$salieron.mal
library(sgat)
initialization_sgat()
#bares <- salieron.mal
ya.hizo <- c()
salieron.mal <- c()
repeticiones <- 0
for(resta in bares){
print(paste("Va por ", which(bares == resta), " de ", length(bares), ": ", 100* which(bares == resta)/length(bares), " %", sep = "" ))
ya.hizo <- c(ya.hizo, resta)
write.csv(ya.hizo, "Concurrencias_CABA/Bares que ya inicio.csv")
concurrencia.bares.caba <- 1
class(concurrencia.bares.caba) <- "try-error"
intento <- 1
while(class(concurrencia.bares.caba) == "try-error" & intento <= 5){
concurrencia.bares.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/bares CABA nuevo sgat", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.bares.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
write.csv(df.salieron.mal, "Concurrencias_CABA/bares salieron mal.csv")
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
}
ya.hizo
bares[!bares %in% ya.hizo]
bares <-bares[!bares %in% ya.hizo]
for(resta in bares){
print(paste("Va por ", which(bares == resta), " de ", length(bares), ": ", 100* which(bares == resta)/length(bares), " %", sep = "" ))
ya.hizo <- c(ya.hizo, resta)
write.csv(ya.hizo, "Concurrencias_CABA/Bares que ya inicio.csv")
concurrencia.bares.caba <- 1
class(concurrencia.bares.caba) <- "try-error"
intento <- 1
while(class(concurrencia.bares.caba) == "try-error" & intento <= 5){
concurrencia.bares.caba <- try(sgat(resta, carpeta.guardado = "CSVs Concurrencias/bares CABA nuevo sgat", tiempo.espera = 15), silent = TRUE)
intento <- intento + 1
repeticiones <- repeticiones + 1
}
if(class(concurrencia.bares.caba) == "try-error"){
salieron.mal <- c(salieron.mal, resta)
write.csv(salieron.mal, "Concurrencias_CABA/bares salieron mal.csv")
}
if(repeticiones >= 100){
Sys.sleep(300)
repeticiones <- 0
}
}
git2r::config(user.name = "matiaspoullain", user.email = "matias.poullain")
git2r::status()
git2r::add(repo = ".", path = getwd(), force = FALSE)
git2r::commit(repo = ".", message = "datos bares", all = TRUE)
shell("git push")
