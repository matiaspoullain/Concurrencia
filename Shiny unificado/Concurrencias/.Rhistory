datos$date <- as.Date(datos$date)
names(datos)[4] <- "Region"
names(datos)[9] <- "Fecha"
names(datos)[10] <- "Comercio minorista y entretenimiento"
names(datos)[11] <- "Alimentos y farmacias"
names(datos)[12] <- "Parques"
names(datos)[13] <- "Terminales de transporte público"
names(datos)[14] <- "Zonas de trabajo"
names(datos)[15] <- "Zonas residenciales"
names(datos[, c(4, 9:15)])
library(tidyr)
datos <- datos[, c(4, 9:15)] %>% gather(Actividad, Cambio_porcentual_a_referencia, -c(Region, Fecha))
names(datos)[4] <- "Cambio porcentual a referencia"
library(ggplot2)
ggplot(datos, aes(x = Fecha, y = `Cambio porcentual a referencia`, col = Actividad)) +
geom_line() +
facet_grid(Region~.)
unique(argentina$sub_region_1)
unique(argentina[argentina$sub_region_1 == "Tierra del Fuego Province", "sub_region_2"])
grepl("Pinamar", "Pinamar Partido", fixed = TRUE)
argentina[grepl("Pinamar", argentina$sub_region_2, fixed = TRUE),]
dim(argentina[grepl("Pinamar", argentina$sub_region_2, fixed = TRUE),])
unique(datos$Actividad)
datos %>%
mutate(colores = case_when(Region == "Pinamar" ~ "blue",
Region == "Promedio país" ~ "grey"),
transparencia = case_when(Region == "Pinamar" ~ "1",
Region == "Promedio país" ~ "0.5")) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, group = Region, color = colores, alpha = transparencia)) +
geom_line() +
tema_mati()
datos %>%
mutate(colores = case_when(Region == "Pinamar" ~ "blue",
Region == "Promedio país" ~ "grey"),
transparencia = case_when(Region == "Pinamar" ~ "1",
Region == "Promedio país" ~ "0.5")) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, group = Region, color = colores, alpha = transparencia)) +
geom_line()
datos %>%
mutate(colores = case_when(Region == "Pinamar" ~ "blue",
Region == "Promedio país" ~ "grey"),
transparencia = case_when(Region == "Pinamar" ~ 1,
Region == "Promedio país" ~ 0.7)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, group = Region, alpha = transparencia), color = colores) +
geom_line()
datos %>%
mutate(colores = case_when(Region == "Pinamar" ~ "blue",
Region == "Promedio país" ~ "grey"),
transparencia = case_when(Region == "Pinamar" ~ 1,
Region == "Promedio país" ~ 0.8)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, group = Region, alpha = transparencia), color = datos$colores) +
geom_line()
datos %>%
mutate(colores = case_when(Region == "Pinamar" ~ "blue",
Region == "Promedio país" ~ "grey"),
transparencia = case_when(Region == "Pinamar" ~ 1,
Region == "Promedio país" ~ 0.8)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()
datos %>%
mutate(colores = case_when(Region == "Pinamar" ~ "blue",
Region == "Promedio país" ~ "grey"),
transparencia = case_when(Region == "Pinamar" ~ 0.3,
Region == "Promedio país" ~ 0.8)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()
datos %>%
mutate(colores = case_when(Region == "Pinamar" ~ "blue",
Region == "Promedio país" ~ "grey"),
transparencia = case_when(Region == "Pinamar" ~ 0.8,
Region == "Promedio país" ~ 0.8)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()
datos %>%
mutate(colores = case_when(Region == "Pinamar" ~ "blue",
Region == "Promedio país" ~ "grey"),
transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.8)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()
datos %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.6)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE)
datos %>%
spread(key = Region, value = `Cambio porcentual a referencia`)
geom_line(aes(y = "Pinamar"))+
datos %>%
datos %>%
ggplot(aes(x = Fecha) +
datos %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)
geom_line(aes(y = "Pinamar"))
datos %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = "Pinamar"))
datos %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = get("Pinamar")))
datos %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = get("Pinamar")), color = "blue", alpha = 0.9) +
geom_line(aes(y = `Promedio país`), color = "grey", alpha = 0.7) +
datos %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = get("Pinamar")), color = "blue", alpha = 0.9) +
geom_line(aes(y = `Promedio país`), color = "grey", alpha = 0.7) +
datos %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = get("Pinamar")), color = "blue", alpha = 0.9) +
geom_line(aes(y = `Promedio país`), color = "grey", alpha = 0.7) +
datos %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = get("Pinamar")), color = "blue", alpha = 0.9) +
geom_line(aes(y = `Promedio país`), color = "grey", alpha = 0.7)
datos %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = `Promedio país`), color = "grey", alpha = 0.7) +
geom_line(aes(y = get("Pinamar")), color = "blue", alpha = 0.9) +
ylab("Cambio porcentual a referencia") +
datos %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = `Promedio país`), color = "grey", alpha = 0.7) +
geom_line(aes(y = get("Pinamar")), color = "blue", alpha = 0.9) +
ylab("Cambio porcentual a referencia")
datos %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = `Promedio país`), color = "grey", alpha = 0.7) +
geom_line(aes(y = get("Pinamar")), color = "blue", alpha = 0.9) +
ylab("Cambio porcentual a referencia")
datos %>%
filter(Actividad == "Parques") %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = `Promedio país`), color = "grey", alpha = 0.7) +
geom_line(aes(y = get("Pinamar")), color = "blue", alpha = 0.9) +
ylab("Cambio porcentual a referencia")
datos %>%
filter(Actividad == "Parques") %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = `Promedio país, color = "grey"`), alpha = 0.7) +
geom_line(aes(y = get("Pinamar"), color = "blue"), alpha = 0.9) +
ylab("Cambio porcentual a referencia")
datos %>%
filter(Actividad == "Parques") %>%
spread(key = Region, value = `Cambio porcentual a referencia`) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = `Promedio país`, color = "grey"), alpha = 0.7) +
geom_line(aes(y = get("Pinamar"), color = "blue"), alpha = 0.9) +
ylab("Cambio porcentual a referencia")
datos %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.6)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE)
datos %>%
filter(Actividad == "Parques") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.6)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE)
datos %>%
filter(Actividad == "Parques") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.6)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE, range = c(0.1, 1))
datos %>%
filter(Actividad == "Parques") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.7)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE, range = c(0.1, 1))
datos %>%
filter(Actividad == "Parques") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.8)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE, range = c(0.1, 1))
datos %>%
filter(Actividad == "Parques") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.9)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE, range = c(0.1, 1))
datos %>%
filter(Actividad == "Parques") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.5)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE, range = c(0.1, 1))
datos %>%
filter(Actividad == "Parques") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.5)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE, range = c(0.5, 1))
datos %>%
filter(Actividad == "Parques") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.5)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE, range = c(0.4, 1))
datos %>%
filter(Actividad == "Parques") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.5)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE, range = c(0.3, 1))
datos %>%
filter(Actividad == "Parques") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.5)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE, range = c(0.2, 1))
library(shinyWidgets)
shinyWidgetsGallery()
shinyWidgetsGallery()
runApp()
unique(datos$Actividad)
runApp()
runApp()
argentina <- reactive({
input$boton.descarga
mobility_var("AR")
})
argentina()
argentina <-  mobility_var("AR")
region.arg <- function(){
datos <- argentina[argentina$sub_region_1 == "" | grepl(input$ciudad, argentina$sub_region_2, fixed = TRUE), ]
datos <- datos %>% mutate(sub_region_2 = case_when(sub_region_1 == "" ~ "Promedio país",
sub_region_2 == "Pinamar Partido" ~ "Pinamar",
sub_region_2 == "Ushuaia Department" ~ "Ushuaia",))
datos$date <- as.Date(datos$date)
names(datos)[4] <- "Region"
names(datos)[9] <- "Fecha"
names(datos)[10] <- "Comercio minorista y entretenimiento"
names(datos)[11] <- "Alimentos y farmacias"
names(datos)[12] <- "Parques"
names(datos)[13] <- "Terminales de transporte público"
names(datos)[14] <- "Zonas de trabajo"
names(datos)[15] <- "Zonas residenciales"
names(datos[, c(4, 9:15)])
datos <- datos[, c(4, 9:15)] %>% gather(Actividad, Cambio_porcentual_a_referencia, -c(Region, Fecha))
names(datos)[4] <- "Cambio porcentual a referencia"
datos
}
region.arg
region.arg()
region.arg <- function(){
datos <- argentina[argentina$sub_region_1 == "" | grepl(Pinamar, argentina$sub_region_2, fixed = TRUE), ]
datos <- datos %>% mutate(sub_region_2 = case_when(sub_region_1 == "" ~ "Promedio país",
sub_region_2 == "Pinamar Partido" ~ "Pinamar",
sub_region_2 == "Ushuaia Department" ~ "Ushuaia",))
datos$date <- as.Date(datos$date)
names(datos)[4] <- "Region"
names(datos)[9] <- "Fecha"
names(datos)[10] <- "Comercio minorista y entretenimiento"
names(datos)[11] <- "Alimentos y farmacias"
names(datos)[12] <- "Parques"
names(datos)[13] <- "Terminales de transporte público"
names(datos)[14] <- "Zonas de trabajo"
names(datos)[15] <- "Zonas residenciales"
names(datos[, c(4, 9:15)])
datos <- datos[, c(4, 9:15)] %>% gather(Actividad, Cambio_porcentual_a_referencia, -c(Region, Fecha))
names(datos)[4] <- "Cambio porcentual a referencia"
datos
}
region.arg()
region.arg <- function(){
datos <- argentina[argentina$sub_region_1 == "" | grepl("Pinamar", argentina$sub_region_2, fixed = TRUE), ]
datos <- datos %>% mutate(sub_region_2 = case_when(sub_region_1 == "" ~ "Promedio país",
sub_region_2 == "Pinamar Partido" ~ "Pinamar",
sub_region_2 == "Ushuaia Department" ~ "Ushuaia",))
datos$date <- as.Date(datos$date)
names(datos)[4] <- "Region"
names(datos)[9] <- "Fecha"
names(datos)[10] <- "Comercio minorista y entretenimiento"
names(datos)[11] <- "Alimentos y farmacias"
names(datos)[12] <- "Parques"
names(datos)[13] <- "Terminales de transporte público"
names(datos)[14] <- "Zonas de trabajo"
names(datos)[15] <- "Zonas residenciales"
names(datos[, c(4, 9:15)])
datos <- datos[, c(4, 9:15)] %>% gather(Actividad, Cambio_porcentual_a_referencia, -c(Region, Fecha))
names(datos)[4] <- "Cambio porcentual a referencia"
datos
}
region.arg()
argentina <-  mobility_var("AR")
region.arg <- function(){
datos <- argentina[argentina$sub_region_1 == "" | grepl("Pinamar", argentina$sub_region_2, fixed = TRUE), ]
datos <- datos %>% mutate(sub_region_2 = case_when(sub_region_1 == "" ~ "Promedio país",
sub_region_2 == "Pinamar Partido" ~ "Pinamar",
sub_region_2 == "Ushuaia Department" ~ "Ushuaia",))
datos$date <- as.Date(datos$date)
names(datos)[4] <- "Region"
names(datos)[9] <- "Fecha"
names(datos)[10] <- "Comercio minorista y entretenimiento"
names(datos)[11] <- "Alimentos y farmacias"
names(datos)[12] <- "Parques"
names(datos)[13] <- "Terminales de transporte público"
names(datos)[14] <- "Zonas de trabajo"
names(datos)[15] <- "Zonas residenciales"
names(datos[, c(4, 9:15)])
datos <- datos[, c(4, 9:15)] %>% gather(Actividad, Cambio_porcentual_a_referencia, -c(Region, Fecha))
names(datos)[4] <- "Cambio porcentual a referencia"
datos
}
region.arg()
g <- datos %>%
filter(Region == "Pinamar") %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, col = Actividad)) +
geom_line(alpha = 0.8) +
tema_mati()
tema_mati <- function(){
theme(panel.border = element_blank(),  panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white", colour = "darkGREY",
size = 1, linetype = "solid"),
panel.grid.major.y = element_line(size = 0.1, color="darkGREY", linetype = "dashed" ),
strip.background =element_rect(fill="#c9acff"))
}
g <- datos %>%
filter(Region == "Pinamar") %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, col = Actividad)) +
geom_line(alpha = 0.8) +
tema_mati()
ggplotly(g, dynamicTicks = TRUE)
sort(unique(datos$Actividad))
g <- datos %>%
filter(Actividad == "Zonas residenciales") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.5)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE, range = c(0.2, 1))
tema_mati()
g <- datos %>%
filter(Actividad == "Zonas residenciales") %>%
mutate(transparencia = case_when(Region == "Pinamar" ~ 0.9,
Region == "Promedio país" ~ 0.5)) %>%
ggplot(aes(x = Fecha, y = `Cambio porcentual a referencia`, color = Region, alpha = transparencia)) +
geom_line()+
scale_alpha_continuous(guide=FALSE, range = c(0.2, 1)) +
tema_mati()
ggplotly(g, dynamicTicks = TRUE)
runApp()
runApp()
mobility_var("AR")
runApp()
runApp()
shinyWidgetsGallery()
runApp()
runApp()
runApp()
shinyWidgetsGallery()
runApp()
runApp()
shinyWidgetsGallery()
argentina
lugares <- unique(interaction(argentina$sub_region_1, argentina$sub_region_2))
lugares
gsub(".*.","",lugares)
gsub(".*./","",lugares)
gsub("^.*\\.","",lugares)
sum(duplicated(gsub("^.*\\.","",lugares)))
mobility_var("AR") %>%
mutate(sub_region_1 = case_when(sub_region_1 == "" ~ "Total país",
TRUE ~ as.character(sub_region_1)),
sub_region_2 = case_when(sub_region_2 == "" ~ "Total provincia",
TRUE ~ as.character(sub_region_2)))
runApp()
runApp()
shinyWidgetsGallery()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
body <- dashboardBody(
tabItems(
tabItem(tabName = "concurrencias",
fluidRow(tabBox(width = 12,
title = "Concurrencia",
tabPanel("Observaciones iniciales",
plotly::plotlyOutput('plot.concurrencia', height = "800px"),
leafletOutput("mapa")),
tabPanel('Métricas resumen',
plotOutput('boxplot.dia'),
uiOutput('anim')),
tabPanel('Más concurridos',
DT::DTOutput("mas.concurridos"),
leafletOutput("mapa.ranking")),
tabPanel('Variación en el tiempo',
plotly::plotlyOutput('plot.mobilidad.actividades'),
awesomeRadio(
inputId = "actividad",
label = "Seleccione actividad",
choices = c("Alimentos y farmacias", "Comercio minorista y entretenimiento",  "Parques", "Terminales de transporte público", "Zonas de trabajo", "Zonas residenciales"),
selected = "Alimentos y farmacias",
inline = TRUE,
status = "success"),
plotly::plotlyOutput('plot.mobilidad.arg'))
)
)
),
tabItem(tabName = "movilidad",
fluidRow(
actionBttn(
inputId = "boton",
label = "Refrescar datos",
style = "fill",
color = "success"),
plotly::plotlyOutput('plot.mobilidad.partido'),
awesomeRadio(
inputId = "actividad2",
label = "Seleccione actividad",
choices = c("Alimentos y farmacias", "Comercio minorista y entretenimiento",  "Parques", "Terminales de transporte público", "Zonas de trabajo", "Zonas residenciales"),
selected = "Alimentos y farmacias",
inline = TRUE,
status = "success"),
plotly::plotlyOutput('plot.mobilidad.arg')
)
)
)
)
runApp()
shiny::runApp(display.mode="showcase")
options(shiny.reactlog=TRUE)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
input$ciudad = "Pinamar"
input <- data.frame()
input$ciudad = "Pinamar"
input <- data.frame(c(1,1))
input$ciudad = "Pinamar"
concurrencias <- read.csv(paste("Concurrencias ", input$ciudad, ".csv", sep = ""), fileEncoding = "UTF-8")
concurrencias$dia <- factor(concurrencias$dia, levels = unique(concurrencias$dia))
concurrencias$lugar.abr <- paste(substr(concurrencias$lugar, 1, 10), "...", sep = "")
concurrencias$lugar.abr <- factor(concurrencias$lugar.abr, levels = sort(unique(concurrencias$lugar.abr)))
nombre.direccion <- as.data.frame(str_split_fixed(concurrencias$lugar, ",", 3)[,1:2])
names(nombre.direccion) <- c("nombre", "direccion")
nombre.direccion$nombre <- trimws(nombre.direccion$nombre)
nombre.direccion$direccion <- trimws(nombre.direccion$direccion)
concurrencias <- cbind(concurrencias, nombre.direccion)
concurrencias
concurrencias <- read.csv(paste("Concurrencias ", input$ciudad, ".csv", sep = ""), fileEncoding = "UTF-8")
input$ciudad
concurrencias <- read.csv(paste("Concurrencias ", "Pinamar", ".csv", sep = ""), fileEncoding = "UTF-8")
concurrencias$dia <- factor(concurrencias$dia, levels = unique(concurrencias$dia))
concurrencias$lugar.abr <- paste(substr(concurrencias$lugar, 1, 10), "...", sep = "")
concurrencias$lugar.abr <- factor(concurrencias$lugar.abr, levels = sort(unique(concurrencias$lugar.abr)))
nombre.direccion <- as.data.frame(str_split_fixed(concurrencias$lugar, ",", 3)[,1:2])
names(nombre.direccion) <- c("nombre", "direccion")
nombre.direccion$nombre <- trimws(nombre.direccion$nombre)
nombre.direccion$direccion <- trimws(nombre.direccion$direccion)
concurrencias <- cbind(concurrencias, nombre.direccion)
concurrencias
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
convertMenuItem()
runApp()
